xFD_itv <- FD_itv %>% group_by(scenario) %>%
summarise(across(c("dendroFD", "TOP", "TED", "MVNHdet",
"TPD_FRich", "TPD_FEve", "TPD_FDiv", "HV_Rich",
"HV_Reg", "HV_Dev"), ~ mean(.x, na.rm = TRUE)))
xFD_itv <- cbind(xFD_itv, str_split_fixed(xFD_itv$scenario, "_", 3))
colnames(xFD_itv)[12:14] <- c("range_trait1", "CVcomm", "CVintrasp")
library(stringr)
xFD_itv <- cbind(xFD_itv, str_split_fixed(xFD_itv$scenario, "_", 3))
colnames(xFD_itv)[12:14] <- c("range_trait1", "CVcomm", "CVintrasp")
xFD_itv$range_trait1 <- as.numeric(xFD_itv$range_trait1)
xFD_itv$CVcomm <- as.numeric(xFD_itv$CVcomm)
xFD_itv$CVintrasp <- as.numeric(xFD_itv$CVintrasp)
library(ggplot2)
# Principal component analysis
pca <- prcomp(xFD_itv[, 2:11], scale = TRUE)
pca_scores <- as.data.frame(pca$x)
pca_loadings <- as.data.frame(pca$rotation)
pca_var <- pca$sdev^2
pca_var_percent <- 100*pca_var/sum(pca_var)
axis_labels <- paste0("PC", 1:2, " (", round(pca_var_percent[1:2], 1), "%)")
size_arrows <- 3
arrows_data <- as.data.frame(size_arrows*pca_loadings[, 1:2])
arrows_data$variable <- rownames(pca_loadings)
ggplot(pca_scores, aes(x = PC1, y = PC2)) +
geom_hex(alpha=0.5) +
geom_density2d()+
scale_fill_continuous(type = "viridis") +
geom_segment(data = arrows_data,
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "black", size = 1) +
geom_text(data = arrows_data,
aes(x = PC1, y = PC2, label = variable),
color = "black", size = 3, vjust = -0.5, hjust = 0.5) +
labs(title = "",
x = paste("Principal Component 1 (", round(pca_var_percent[1], 1), "%)", sep = ""),
y = paste("Principal Component 2 (", round(pca_var_percent[2], 1), "%)", sep = "")) +
theme(legend.position = "none") +
theme_bw()
ggplot(pca_scores, aes(x = PC1, y = PC2)) +
geom_hex(alpha=0.5) +
scale_fill_continuous(type = "viridis") +
geom_segment(data = arrows_data,
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "black", size = 1) +
geom_text(data = arrows_data,
aes(x = PC1, y = PC2, label = variable),
color = "black", size = 3, vjust = -0.5, hjust = 0.5) +
labs(title = "",
x = paste("Principal Component 1 (", round(pca_var_percent[1], 1), "%)", sep = ""),
y = paste("Principal Component 2 (", round(pca_var_percent[2], 1), "%)", sep = "")) +
theme(legend.position = "none") +
theme_bw()
ggplot(pca_scores, aes(x = PC1, y = PC2)) +
geom_point()+
#geom_hex(alpha=0.5) +
scale_fill_continuous(type = "viridis") +
geom_segment(data = arrows_data,
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "black", size = 1) +
geom_text(data = arrows_data,
aes(x = PC1, y = PC2, label = variable),
color = "black", size = 3, vjust = -0.5, hjust = 0.5) +
labs(title = "",
x = paste("Principal Component 1 (", round(pca_var_percent[1], 1), "%)", sep = ""),
y = paste("Principal Component 2 (", round(pca_var_percent[2], 1), "%)", sep = "")) +
theme(legend.position = "none") +
theme_bw()
head(FD_itv)
xFD_itv <- cbind(xFD_itv, str_split_fixed(xFD_itv$scenario, "_", 3))
colnames(xFD_itv)[12:14] <- c("range_trait1", "CVcomm", "CVintrasp")
xFD_itv$range_trait1 <- as.numeric(xFD_itv$range_trait1)
xFD_itv$CVcomm <- as.numeric(xFD_itv$CVcomm)
xFD_itv$CVintrasp <- as.numeric(xFD_itv$CVintrasp)
head(xFD_itv)
FD_itv <- read.table("C:/RD/FD_itv_sims.txt", header = TRUE)
# Average metrics per simulation scenario
FD_itv$scenario <- paste(FD_itv$range_trait1,FD_itv$CVcomm,
FD_itv$CVintrasp, sep="_")
xFD_itv <- FD_itv %>% group_by(scenario) %>%
summarise(across(c("dendroFD", "TOP", "TED", "MVNHdet",
"TPD_FRich", "TPD_FEve", "TPD_FDiv", "HV_Rich",
"HV_Reg", "HV_Dev"), ~ mean(.x, na.rm = TRUE)))
xFD_itv <- cbind(xFD_itv, str_split_fixed(xFD_itv$scenario, "_", 3))
colnames(xFD_itv)[12:14] <- c("range_trait1", "CVcomm", "CVintrasp")
xFD_itv$range_trait1 <- as.numeric(xFD_itv$range_trait1)
xFD_itv$CVcomm <- as.numeric(xFD_itv$CVcomm)
xFD_itv$CVintrasp <- as.numeric(xFD_itv$CVintrasp)
head(xFD_itv)
# Principal component analysis
pca <- prcomp(xFD_itv[, 2:11], scale = TRUE)
pca_scores <- as.data.frame(pca$x)
pca_loadings <- as.data.frame(pca$rotation)
pca_var <- pca$sdev^2
pca_var_percent <- 100*pca_var/sum(pca_var)
axis_labels <- paste0("PC", 1:2, " (", round(pca_var_percent[1:2], 1), "%)")
size_arrows <- 3
arrows_data <- as.data.frame(size_arrows*pca_loadings[, 1:2])
arrows_data$variable <- rownames(pca_loadings)
ggplot(pca_scores, aes(x = PC1, y = PC2)) +
geom_point()+
#geom_hex(alpha=0.5) +
scale_fill_continuous(type = "viridis") +
geom_segment(data = arrows_data,
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "black", size = 1) +
geom_text(data = arrows_data,
aes(x = PC1, y = PC2, label = variable),
color = "black", size = 3, vjust = -0.5, hjust = 0.5) +
labs(title = "",
x = paste("Principal Component 1 (", round(pca_var_percent[1], 1), "%)", sep = ""),
y = paste("Principal Component 2 (", round(pca_var_percent[2], 1), "%)", sep = "")) +
theme(legend.position = "none") +
theme_bw()
# Show sources of variation
# Normalize variables to range [0, 1]
var1_norm <- rescale(range_trait1)
library(scales)
# Show sources of variation
# Normalize variables to range [0, 1]
var1_norm <- rescale(range_trait1)
# Show sources of variation
# Normalize variables to range [0, 1]
var1_norm <- rescale(xFD_itv$range_trait1)
var2_norm <- rescale(xFD_itv$CVcomm)
var3_norm <- rescale(xFD_itv$CVintrasp)
# Combine into RGB colors
colors <- rgb(var1_norm, var2_norm, var3_norm, maxColorValue = 1)
pca$color <- colors
pca_plot <- ggplot(pca, aes(x = PC1, y = PC2, color = I(color))) +
geom_point(size = 3) +
theme_minimal() +
labs(title = "PCA with RGB Combination",
x = "PC1", y = "PC2")
pca$color
pca_scores$color <- colors
pca_plot <- ggplot(pca_scores, aes(x = PC1, y = PC2, color = I(color))) +
geom_point(size = 3) +
theme_minimal() +
labs(title = "PCA with RGB Combination",
x = "PC1", y = "PC2")
ggplot(pca_scores, aes(x = PC1, y = PC2, color = I(color))) +
geom_point(size = 3) +
theme_minimal() +
labs(title = "PCA with RGB Combination",
x = "PC1", y = "PC2")
# Create dummy plots for continuous variables to serve as legends
legend1 <- ggplot(data.frame(var1_norm, dummy=1), aes(x=dummy, y=var1_norm, fill=var1_norm)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red", name = "Var 1 (Red)") +
theme_void() +
theme(legend.position = "right")
legend2 <- ggplot(data.frame(var2_norm, dummy=1), aes(x=dummy, y=var2_norm, fill=var2_norm)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "green", name = "Var 2 (Green)") +
theme_void() +
theme(legend.position = "right")
legend3 <- ggplot(data.frame(var3_norm, dummy=1), aes(x=dummy, y=var3_norm, fill=var3_norm)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue", name = "Var 3 (Blue)") +
theme_void() +
theme(legend.position = "right")
pca_plot <- ggplot(pca_scores, aes(x = PC1, y = PC2, color = I(color))) +
geom_point(size = 3) +
theme_minimal() +
labs(title = "PCA with RGB Combination",
x = "PC1", y = "PC2")
# Combine the PCA plot with legends using cowplot
combined_plot <- plot_grid(
pca_plot,
plot_grid(legend1 + theme(legend.position = "right"),
legend2 + theme(legend.position = "right"),
legend3 + theme(legend.position = "right"),
ncol = 1, rel_widths = c(1)),
nrow = 1, rel_widths = c(4, 1)
)
# Display the combined plot
print(combined_plot)
library(cowplot)
install.packages("cowplot")
library(cowplot)
# Combine the PCA plot with legends using cowplot
combined_plot <- plot_grid(
pca_plot,
plot_grid(legend1 + theme(legend.position = "right"),
legend2 + theme(legend.position = "right"),
legend3 + theme(legend.position = "right"),
ncol = 1, rel_widths = c(1)),
nrow = 1, rel_widths = c(4, 1)
)
# Display the combined plot
print(combined_plot)
pca_plot <- ggplot(pca_scores, aes(x = PC1, y = PC2, color = I(color))) +
geom_point(size = 3) +
theme_minimal() +
labs(title = "",
x = paste("Principal Component 1 (", round(pca_var_percent[1], 1), "%)", sep = ""),
y = paste("Principal Component 2 (", round(pca_var_percent[2], 1), "%)", sep = ""))
# Create dummy plots for continuous variables to serve as legends
legend1 <- ggplot(data.frame(var1_norm, dummy=1), aes(x=dummy, y=var1_norm, fill=var1_norm)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red", name = "Between-assemblage variance") +
theme_void() +
theme(legend.position = "right")
legend2 <- ggplot(data.frame(var2_norm, dummy=1), aes(x=dummy, y=var2_norm, fill=var2_norm)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "green", name = "Between-species variance") +
theme_void() +
theme(legend.position = "right")
legend3 <- ggplot(data.frame(var3_norm, dummy=1), aes(x=dummy, y=var3_norm, fill=var3_norm)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue", name = "Within-species variance") +
theme_void() +
theme(legend.position = "right")
# Combine the PCA plot with legends using cowplot
combined_plot <- plot_grid(
pca_plot,
plot_grid(legend1 + theme(legend.position = "right"),
legend2 + theme(legend.position = "right"),
legend3 + theme(legend.position = "right"),
ncol = 1, rel_widths = c(1)),
nrow = 1, rel_widths = c(4, 1)
)
print(combined_plot)
pca_plot <- ggplot(pca_scores, aes(x = PC1, y = PC2, color = I(color))) +
geom_point(size = 3) +
geom_segment(data = arrows_data,
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "black", size = 1) +
geom_text(data = arrows_data,
aes(x = PC1, y = PC2, label = variable),
color = "black", size = 3, vjust = -0.5, hjust = 0.5) +
theme_minimal() +
labs(title = "",
x = paste("Principal Component 1 (", round(pca_var_percent[1], 1), "%)", sep = ""),
y = paste("Principal Component 2 (", round(pca_var_percent[2], 1), "%)", sep = ""))
# Create dummy plots for continuous variables to serve as legends
legend1 <- ggplot(data.frame(var1_norm, dummy=1), aes(x=dummy, y=var1_norm, fill=var1_norm)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red", name = "Between-assemblage variance") +
theme_void() +
theme(legend.position = "right")
legend2 <- ggplot(data.frame(var2_norm, dummy=1), aes(x=dummy, y=var2_norm, fill=var2_norm)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "green", name = "Between-species variance") +
theme_void() +
theme(legend.position = "right")
legend3 <- ggplot(data.frame(var3_norm, dummy=1), aes(x=dummy, y=var3_norm, fill=var3_norm)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue", name = "Within-species variance") +
theme_void() +
theme(legend.position = "right")
# Combine the PCA plot with legends using cowplot
combined_plot <- plot_grid(
pca_plot,
plot_grid(legend1 + theme(legend.position = "right"),
legend2 + theme(legend.position = "right"),
legend3 + theme(legend.position = "right"),
ncol = 1, rel_widths = c(1)),
nrow = 1, rel_widths = c(4, 1)
)
print(combined_plot)
variable
head(arrows_data)
arrows_dat
arrows_data
arrows_data$variable <- c("Dendrogram FD", "TOP", "TED", "MVNH",
"TPD FRich", "TPD FEve", "TPD FDiv",
"HV FRich", "HV FReg", "HV FDiv")
# Show sources of variation
# Normalize variables to range [0, 1]
var1_norm <- rescale(xFD_itv$range_trait1)
var2_norm <- rescale(xFD_itv$CVcomm)
var3_norm <- rescale(xFD_itv$CVintrasp)
# Combine into RGB colors
colors <- rgb(var1_norm, var2_norm, var3_norm, maxColorValue = 1)
pca_scores$color <- colors
pca_plot <- ggplot(pca_scores, aes(x = PC1, y = PC2, color = I(color))) +
geom_point(size = 3) +
geom_segment(data = arrows_data,
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "black", size = 1) +
geom_text(data = arrows_data,
aes(x = PC1, y = PC2, label = variable),
color = "black", size = 3, vjust = -0.5, hjust = 0.5) +
theme_minimal() +
labs(title = "",
x = paste("Principal Component 1 (", round(pca_var_percent[1], 1), "%)", sep = ""),
y = paste("Principal Component 2 (", round(pca_var_percent[2], 1), "%)", sep = ""))
# Create dummy plots for continuous variables to serve as legends
legend1 <- ggplot(data.frame(var1_norm, dummy=1), aes(x=dummy, y=var1_norm, fill=var1_norm)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red", name = "Between-assemblage variance") +
theme_void() +
theme(legend.position = "right")
legend2 <- ggplot(data.frame(var2_norm, dummy=1), aes(x=dummy, y=var2_norm, fill=var2_norm)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "green", name = "Between-species variance") +
theme_void() +
theme(legend.position = "right")
legend3 <- ggplot(data.frame(var3_norm, dummy=1), aes(x=dummy, y=var3_norm, fill=var3_norm)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue", name = "Within-species variance") +
theme_void() +
theme(legend.position = "right")
# Combine the PCA plot with legends using cowplot
combined_plot <- plot_grid(
pca_plot,
plot_grid(legend1 + theme(legend.position = "right"),
legend2 + theme(legend.position = "right"),
legend3 + theme(legend.position = "right"),
ncol = 1, rel_widths = c(1)),
nrow = 1, rel_widths = c(4, 1)
)
print(combined_plot)
head(FD_itv)
cor(FD_itv[,1:10])
# Principal component analysis
pca <- prcomp(FD_itv[, 1:10], scale = TRUE)
pca_scores <- as.data.frame(pca$x)
pca_loadings <- as.data.frame(pca$rotation)
pca_var <- pca$sdev^2
pca_var_percent <- 100*pca_var/sum(pca_var)
axis_labels <- paste0("PC", 1:2, " (", round(pca_var_percent[1:2], 1), "%)")
size_arrows <- 3
arrows_data <- as.data.frame(size_arrows*pca_loadings[, 1:2])
arrows_data$variable <- rownames(pca_loadings)
arrows_data$variable <- c("Dendrogram FD", "TOP", "TED", "MVNH",
"TPD FRich", "TPD FEve", "TPD FDiv",
"HV FRich", "HV FReg", "HV FDiv")
# General plot
ggplot(pca_scores, aes(x = PC1, y = PC2)) +
geom_point()+
geom_hex(alpha=0.5) +
scale_fill_continuous(type = "viridis") +
geom_segment(data = arrows_data,
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "black", size = 1) +
geom_text(data = arrows_data,
aes(x = PC1, y = PC2, label = variable),
color = "black", size = 3, vjust = -0.5, hjust = 0.5) +
labs(title = "",
x = paste("Principal Component 1 (", round(pca_var_percent[1], 1), "%)", sep = ""),
y = paste("Principal Component 2 (", round(pca_var_percent[2], 1), "%)", sep = "")) +
theme(legend.position = "none") +
theme_bw()
# General plot
ggplot(pca_scores, aes(x = PC1, y = PC2)) +
geom_hex(alpha=0.5) +
scale_fill_continuous(type = "viridis") +
geom_segment(data = arrows_data,
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "black", size = 1) +
geom_text(data = arrows_data,
aes(x = PC1, y = PC2, label = variable),
color = "black", size = 3, vjust = -0.5, hjust = 0.5) +
labs(title = "",
x = paste("Principal Component 1 (", round(pca_var_percent[1], 1), "%)", sep = ""),
y = paste("Principal Component 2 (", round(pca_var_percent[2], 1), "%)", sep = "")) +
theme(legend.position = "none") +
theme_bw()
# Average metrics per simulation scenario
FD_itv$scenario <- paste(FD_itv$range_trait1, FD_itv$CVcomm,
FD_itv$CVintrasp, sep = "_")
xFD_itv <- FD_itv %>% group_by(scenario) %>%
summarise(across(c("dendroFD", "TOP", "TED", "MVNHdet",
"TPD_FRich", "TPD_FEve", "TPD_FDiv", "HV_Rich",
"HV_Reg", "HV_Dev"), ~ mean(.x, na.rm = TRUE)))
xFD_itv <- cbind(xFD_itv, str_split_fixed(xFD_itv$scenario, "_", 3))
colnames(xFD_itv)[12:14] <- c("range_trait1", "CVcomm", "CVintrasp")
xFD_itv$range_trait1 <- as.numeric(xFD_itv$range_trait1)
xFD_itv$CVcomm <- as.numeric(xFD_itv$CVcomm)
xFD_itv$CVintrasp <- as.numeric(xFD_itv$CVintrasp)
# Normalize variables to range [0, 1]
var1_norm <- rescale(xFD_itv$range_trait1)
var2_norm <- rescale(xFD_itv$CVcomm)
var3_norm <- rescale(xFD_itv$CVintrasp)
# Combine into RGB colors
colors <- rgb(var1_norm, var2_norm, var3_norm, maxColorValue = 1)
pca_scores$color <- colors
pca_plot <- ggplot(pca_scores, aes(x = PC1, y = PC2, color = I(color))) +
geom_point(size = 3) +
geom_segment(data = arrows_data,
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "black", size = 1) +
geom_text(data = arrows_data,
aes(x = PC1, y = PC2, label = variable),
color = "black", size = 3, vjust = -0.5, hjust = 0.5) +
theme_minimal() +
labs(title = "",
x = paste("Principal Component 1 (", round(pca_var_percent[1], 1), "%)", sep = ""),
y = paste("Principal Component 2 (", round(pca_var_percent[2], 1), "%)", sep = ""))
# Create dummy plots for continuous variables to serve as legends
legend1 <- ggplot(data.frame(var1_norm, dummy=1), aes(x=dummy, y=var1_norm, fill=var1_norm)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red", name = "Between-assemblage variance") +
theme_void() +
theme(legend.position = "right")
legend2 <- ggplot(data.frame(var2_norm, dummy=1), aes(x=dummy, y=var2_norm, fill=var2_norm)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "green", name = "Between-species variance") +
theme_void() +
theme(legend.position = "right")
legend3 <- ggplot(data.frame(var3_norm, dummy=1), aes(x=dummy, y=var3_norm, fill=var3_norm)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue", name = "Within-species variance") +
theme_void() +
theme(legend.position = "right")
# Combine the PCA plot with legends using cowplot
combined_plot <- plot_grid(
pca_plot,
plot_grid(legend1 + theme(legend.position = "right"),
legend2 + theme(legend.position = "right"),
legend3 + theme(legend.position = "right"),
ncol = 1, rel_widths = c(1)),
nrow = 1, rel_widths = c(4, 1)
)
print(combined_plot)
FD_itv$scenario <- paste(FD_itv$range_trait1, FD_itv$CVcomm,
FD_itv$CVintrasp, sep = "_")
xFD_itv <- FD_itv %>% group_by(scenario) %>%
summarise(across(c("dendroFD", "TOP", "TED", "MVNHdet",
"TPD_FRich", "TPD_FEve", "TPD_FDiv", "HV_Rich",
"HV_Reg", "HV_Dev"), ~ mean(.x, na.rm = TRUE)))
xFD_itv <- cbind(xFD_itv, str_split_fixed(xFD_itv$scenario, "_", 3))
colnames(xFD_itv)[12:14] <- c("range_trait1", "CVcomm", "CVintrasp")
xFD_itv$range_trait1 <- as.numeric(xFD_itv$range_trait1)
xFD_itv$CVcomm <- as.numeric(xFD_itv$CVcomm)
xFD_itv$CVintrasp <- as.numeric(xFD_itv$CVintrasp)
pca <- prcomp(xFD_itv[, 2:11], scale = TRUE)
pca_scores <- as.data.frame(pca$x)
pca_loadings <- as.data.frame(pca$rotation)
pca_var <- pca$sdev^2
pca_var_percent <- 100*pca_var/sum(pca_var)
axis_labels <- paste0("PC", 1:2, " (", round(pca_var_percent[1:2], 1), "%)")
size_arrows <- 3
arrows_data <- as.data.frame(size_arrows*pca_loadings[, 1:2])
arrows_data$variable <- rownames(pca_loadings)
arrows_data$variable <- c("Dendrogram FD", "TOP", "TED", "MVNH",
"TPD FRich", "TPD FEve", "TPD FDiv",
"HV FRich", "HV FReg", "HV FDiv")
# Normalize variables to range [0, 1]
var1_norm <- rescale(xFD_itv$range_trait1)
var2_norm <- rescale(xFD_itv$CVcomm)
var3_norm <- rescale(xFD_itv$CVintrasp)
# Combine into RGB colors
colors <- rgb(var1_norm, var2_norm, var3_norm, maxColorValue = 1)
pca_scores$color <- colors
pca_plot <- ggplot(pca_scores, aes(x = PC1, y = PC2, color = I(color))) +
geom_point(size = 3) +
geom_segment(data = arrows_data,
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "black", size = 1) +
geom_text(data = arrows_data,
aes(x = PC1, y = PC2, label = variable),
color = "black", size = 3, vjust = -0.5, hjust = 0.5) +
theme_minimal() +
labs(title = "",
x = paste("Principal Component 1 (", round(pca_var_percent[1], 1), "%)", sep = ""),
y = paste("Principal Component 2 (", round(pca_var_percent[2], 1), "%)", sep = ""))
# Create dummy plots for continuous variables to serve as legends
legend1 <- ggplot(data.frame(var1_norm, dummy=1), aes(x=dummy, y=var1_norm, fill=var1_norm)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red", name = "Between-assemblage variance") +
theme_void() +
theme(legend.position = "right")
legend2 <- ggplot(data.frame(var2_norm, dummy=1), aes(x=dummy, y=var2_norm, fill=var2_norm)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "green", name = "Between-species variance") +
theme_void() +
theme(legend.position = "right")
legend3 <- ggplot(data.frame(var3_norm, dummy=1), aes(x=dummy, y=var3_norm, fill=var3_norm)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue", name = "Within-species variance") +
theme_void() +
theme(legend.position = "right")
# Combine the PCA plot with legends using cowplot
combined_plot <- plot_grid(
pca_plot,
plot_grid(legend1 + theme(legend.position = "right"),
legend2 + theme(legend.position = "right"),
legend3 + theme(legend.position = "right"),
ncol = 1, rel_widths = c(1)),
nrow = 1, rel_widths = c(4, 1)
)
print(combined_plot)
pca <- prcomp(FD_itv[, 1:10], scale = TRUE)
pca_scores <- as.data.frame(pca$x)
pca_loadings <- as.data.frame(pca$rotation)
pca_var <- pca$sdev^2
pca_var_percent <- 100*pca_var/sum(pca_var)
axis_labels <- paste0("PC", 1:2, " (", round(pca_var_percent[1:2], 1), "%)")
size_arrows <- 3
arrows_data <- as.data.frame(size_arrows*pca_loadings[, 1:2])
arrows_data$variable <- rownames(pca_loadings)
arrows_data$variable <- c("Dendrogram FD", "TOP", "TED", "MVNH",
"TPD FRich", "TPD FEve", "TPD FDiv",
"HV FRich", "HV FReg", "HV FDiv")
# PCA on individual communities
ggplot(pca_scores, aes(x = PC1, y = PC2)) +
geom_hex(alpha=0.5) +
scale_fill_continuous(type = "viridis") +
geom_segment(data = arrows_data,
aes(x = 0, y = 0, xend = PC1, yend = PC2),
color = "black", size = 1) +
geom_text(data = arrows_data,
aes(x = PC1, y = PC2, label = variable),
color = "black", size = 3, vjust = -0.5, hjust = 0.5) +
labs(title = "",
x = paste("Principal Component 1 (", round(pca_var_percent[1], 1), "%)", sep = ""),
y = paste("Principal Component 2 (", round(pca_var_percent[2], 1), "%)", sep = "")) +
theme(legend.position = "none") +
theme_bw()
